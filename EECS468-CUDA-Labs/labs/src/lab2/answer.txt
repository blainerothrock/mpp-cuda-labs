2048 (max number of threads) * 8 (# of SMs on the GTX-680) = 16,384 ?????

Or run query to get this???


OTHER NOTES;
We choose TILE_WIDTH to be 16. Note that a block is limited to 1024 threads. So if we have 1 block per tile, then we have 16*16=256 which is well below 1024. The reason we donâ€™t choose 16 to be larger is because the max number of threads per SM is 2048. Thus, we can have 2048/(16*16) = 8 blocks per SM. If we chose tile size to be 32, we would only have 2048/(32*32) = 2 blocks per SM.

Shared memory calculation (size is 48KB or 49,152):
TILE_WIDTH^2 * # of tiles (for M, N, P) * sizeof(float) = shared memory usage
16*16*3*4 = 3,072 << 49,152

So there is plenty of room left over in shared memory for the compiler to use.

output
nvcc -gencode=arch=compute_30,code=\"sm_30,compute_30\" --ptxas-options=-v matrixmul_kernel.cu
ptxas info    : 0 bytes gmem
ptxas info    : Compiling entry function '_Z15MatrixMulKernel6MatrixS_S_' for 'sm_30'
ptxas info    : Function properties for _Z15MatrixMulKernel6MatrixS_S_
    0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads
ptxas info    : Used 29 registers, 2048 bytes smem, 392 bytes cmem[0]
/usr/lib/gcc/x86_64-redhat-linux/4.4.7/../../../../lib64/crt1.o: In function `_start':
(.text+0x20): undefined reference to `main'
collect2: ld returned 1 exit statu
